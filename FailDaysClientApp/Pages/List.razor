@page "/List"
@using FailDaysClientApp.Models
@using System.Net.Http.Json
@using System.ComponentModel
@using System.Diagnostics
@using System.Globalization
@using Humanizer
@inject HttpClient httpClient

<DataGrid TItem="Student"
          Data="@students"
          ReadData="@OnReadData"
          TotalItems="@totalStudents"
          SelectedRowChanged="Callback">
    <DataGridCommandColumn 
        TItem="Student" 
        Editable="true"
        CellsEditableOnEditCommand="true"/>
    <DataGridColumn TItem="Student" Field="@nameof(Student.MatNr)" Caption="Mat.nr." Sortable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.FirstName)" Caption="First Name" Editable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.LastName)" Caption="Last Name" Editable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.CourseId)" Caption="Course" Editable="true" />
</DataGrid>
<ListGroup>
    <ListGroupItem>@selectedStudent.FirstName</ListGroupItem>
    <ListGroupItem>@selectedStudent.LastName</ListGroupItem>
    <ListGroupItem>@selectedStudent.MatNr.ToString()</ListGroupItem>
</ListGroup>
<ListGroup>
    @if (gradeCategegories != null)
    {
        foreach(Grade grade in gradeCategegories)
        {
            <ListGroupItem>
                @grade.Category
                    <Select TValue="string" Style="@($"width: 300px;")" SelectedValue="@grade.Number.ToString()" SelectedValueChanged="delegate(string d) { OnSelectedValueChanged(grade, d); }">
                        <SelectGroup Label="SEHR GUT">
                            <SelectItem Value=1.0>1.0</SelectItem>
                            <SelectItem Value=1.3>1.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="GUT">
                            <SelectItem Value=1.7>1.7</SelectItem>
                            <SelectItem Value=2.0>2.0</SelectItem>
                            <SelectItem Value=2.3>2.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="BEFRIEDIGEND">
                            <SelectItem Value=2.7>2.7</SelectItem>
                            <SelectItem Value=3.0>3.0</SelectItem>
                            <SelectItem Value=3.3>3.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="AUSREICHEND">
                            <SelectItem Value=3.7>3.7</SelectItem>
                            <SelectItem Value=4.0>4.0</SelectItem>
                        </SelectGroup>
                    </Select>
                    <Button>ADD</Button>
            </ListGroupItem>
        }
    }
    
</ListGroup>
@code
{
    Student selectedStudent = new Student(){FirstName = "", LastName = ""};
    Student[] students;
    Grade[] gradeCategegories;
    int totalStudents;
    Select<double> selectRef;


    async Task OnReadData(DataGridReadDataEventArgs<Student> e)
    {
        HttpResponseMessage response = await httpClient.GetAsync("https://localhost:5001/api/student");
        students = await response.Content.ReadFromJsonAsync<Student[]>();
        StateHasChanged();
    }

    async Task OnSelectedValueChanged(Grade grade, string d)
    {
        double parseString = double.Parse(d, CultureInfo.CurrentCulture);
        parseString = Math.Round(parseString, 1);
        grade.Number = parseString;
        var uri = $"https://localhost:5001/api/grade/{grade.Id}";
        HttpResponseMessage responseGrades = await httpClient.PutAsJsonAsync(uri, d);
    }

    private async Task Callback(Student student)
    {
        selectedStudent = student;
        HttpResponseMessage responseGrades = await httpClient.GetAsync($"https://localhost:5001/api/grade/{student.MatNr}");
        gradeCategegories = await responseGrades.Content.ReadFromJsonAsync<Grade[]>();
        StateHasChanged();
    }
}