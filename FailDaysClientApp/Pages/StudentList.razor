@page "/List"
@using FailDaysClientApp.Models
@using System.Net.Http.Json
@using System.ComponentModel
@using System.Diagnostics
@using System.Globalization
@using System.Linq
@using System.Net
@using System.Timers
@using FailDaysClientApp.Controller
@using Humanizer


<DataGrid TItem="Student"
          Data="@students"
          ReadData="@OnReadData"
          TotalItems="@totalStudents"
          SelectedRowChanged="ChangeStudentDetails">
    <DataGridCommandColumn 
        TItem="Student" 
        Editable="true"
        CellsEditableOnEditCommand="true"/>
    <DataGridColumn TItem="Student" Field="@nameof(Student.MatNr)" Caption="Mat.nr." Sortable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.FirstName)" Caption="First Name" Editable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.LastName)" Caption="Last Name" Editable="true" />
    <DataGridColumn TItem="Student" Field="@nameof(Student.CourseId)" Caption="Course" Editable="true" />
</DataGrid>
<Row>
<Column>
    <Jumbotron Background="Background.Primary" Margin="Margin.Is4.FromBottom">
        <JumbotronTitle Size="JumbotronTitleSize.Is4">@selectedStudent.FirstName</JumbotronTitle>
        <JumbotronSubtitle>
            This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.
        </JumbotronSubtitle>
        <Divider></Divider>
        <Paragraph>
            It uses utility classes for typography and spacing to space content out within the larger container.
        </Paragraph>
    </Jumbotron>
</Column>
<Column>
    @if (gradeCategegories != null)
    {
        foreach(Grade grade in gradeCategegories)
        {
            <Row @ref="rows[gradeCategegories.IndexOf(grade)]">
                <Column ColumnSize="ColumnSize.Is6">
                    @grade.Category
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Select TValue="decimal"
                            SelectedValue="@grade.Number"
                            SelectedValueChanged="delegate(decimal d) { OnSelectedValueChanged(gradeCategegories.IndexOf(grade), d); }"
                            DecimalsSeparator="."
                            Culture="en">
                        <SelectGroup Label="OHNE BEWERTUNG">
                            <SelectItem Value="0.0">0.0</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="SEHR GUT">
                            <SelectItem Value="1.0">1.0</SelectItem>
                            <SelectItem Value="1.3">1.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="GUT">
                            <SelectItem Value="1.7">1.7</SelectItem>
                            <SelectItem Value="2.0">2.0</SelectItem>
                            <SelectItem Value="2.3">2.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="BEFRIEDIGEND">
                            <SelectItem Value="2.7">2.7</SelectItem>
                            <SelectItem Value="3.0">3.0</SelectItem>
                            <SelectItem Value="3.3">3.3</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="AUSREICHEND">
                            <SelectItem Value="3.7">3.7</SelectItem>
                            <SelectItem Value="4.0">4.0</SelectItem>
                        </SelectGroup>
                        <SelectGroup Label="NICHT BESTANDEN">
                            <SelectItem Value="5.0">5.0</SelectItem>
                        </SelectGroup>
                    </Select>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <CustomBadge @ref="@badges[gradeCategegories.IndexOf(grade)]"/>
                </Column>
            </Row>
        }
    }
</Column>
</Row>

@code
{
    
}